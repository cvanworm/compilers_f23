token(K_PROGRAM, program)
token(IDENTIFIER, tiny_example_2)
token(LCURLY, {)
token(K_FUNCTION, function)
token(K_INTEGER, integer)
token(IDENTIFIER, main)
token(LPAREN, ()
token(RPAREN, ))
token(LCURLY, {)
token(K_INTEGER, integer)
token(IDENTIFIER, i)
token(SEMI, ;)
token(IDENTIFIER, i)
token(ASSIGN, :=)
token(ICONSTANT, 5)
token(SEMI, ;)
token(K_IF, if)
token(LPAREN, ()
token(IDENTIFIER, i)
token(DEQ, ==)
token(ICONSTANT, 0)
token(RPAREN, ))
token(K_THEN, then)
token(LCURLY, {)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(RCURLY, })
token(K_ELSE, else)
token(K_IF, if)
token(LPAREN, ()
token(IDENTIFIER, i)
token(DEQ, ==)
token(ICONSTANT, 2)
token(RPAREN, ))
token(K_THEN, then)
token(LCURLY, {)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(RCURLY, })
token(K_ELSE, else)
token(LCURLY, {)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(RCURLY, })
token(K_IF, if)
token(LPAREN, ()
token(IDENTIFIER, dsoln)
token(LEQ, <=)
token(ICONSTANT, 0)
token(RPAREN, ))
token(K_THEN, then)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(K_ELSE, else)
token(K_IF, if)
token(LPAREN, ()
token(IDENTIFIER, i)
token(DEQ, ==)
token(ICONSTANT, 2)
token(RPAREN, ))
token(K_THEN, then)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(K_ELSE, else)
token(K_PRINT_STRING, print_string)
token(LPAREN, ()
token(SCONSTANT, "i")
token(RPAREN, ))
token(SEMI, ;)
token(RCURLY, })
token(RCURLY, })
valid program
