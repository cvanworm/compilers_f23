token(COMMENT, // ----------------------------------------------------------------------------)
token(COMMENT, // This code prints a specified number of digits in the fibonacci sequence)
token(COMMENT, //)
token(COMMENT, // Written by: Alicia Thoney)
token(COMMENT, // Inspired by: https://www.geeksforgeeks.org/python-program-to-print-the-fibonacci-sequence/)
token(COMMENT, //)
token(COMMENT, // ----------------------------------------------------------------------------)
token(K_PROGRAM, program)
token(IDENTIFIER, $fib_generator)
token(LCURLY, {)
token(K_FUNCTION, function)
token(K_INTEGER, integer)
token(IDENTIFIER, main)
token(LPAREN, ()
token(RPAREN, ))
token(LCURLY, {)
token(K_INTEGER, integer)
token(IDENTIFIER, n)
token(ASSIGN, :=)
token(ICONSTANT, 10)
token(SEMI, ;)
token(COMMENT, // Number of digits to print)
token(K_INTEGER, integer)
token(IDENTIFIER, num1)
token(ASSIGN, :=)
token(ICONSTANT, 0)
token(SEMI, ;)
token(K_INTEGER, integer)
token(IDENTIFIER, num2)
token(ASSIGN, :=)
token(ICONSTANT, 1)
token(SEMI, ;)
token(K_INTEGER, integer)
token(IDENTIFIER, next_num)
token(ASSIGN, :=)
token(IDENTIFIER, num2)
token(SEMI, ;)
token(K_INTEGER, integer)
token(IDENTIFIER, count)
token(ASSIGN, :=)
token(ICONSTANT, 1)
token(SEMI, ;)
token(K_WHILE, while)
token(LPAREN, ()
token(IDENTIFIER, count)
token(LT, <)
token(IDENTIFIER, n)
token(RPAREN, ))
token(LCURLY, {)
token(K_PRINT_INTEGER, print_integer)
token(LPAREN, ()
token(IDENTIFIER, next_num)
token(RPAREN, ))
token(SEMI, ;)
token(IDENTIFIER, num1)
token(ASSIGN, :=)
token(IDENTIFIER, num2)
token(SEMI, ;)
token(IDENTIFIER, num2)
token(ASSIGN, :=)
token(IDENTIFIER, next_num)
token(SEMI, ;)
token(IDENTIFIER, next_num)
token(ASSIGN, :=)
token(IDENTIFIER, num1)
token(PLUS, +)
token(IDENTIFIER, num2)
token(SEMI, ;)
token(IDENTIFIER, count)
token(INCREMENT, ++)
token(SEMI, ;)
token(RCURLY, })
token(K_RETURN, return)
token(ICONSTANT, 0)
token(SEMI, ;)
token(RCURLY, })
token(COMMENT, // of main)
token(RCURLY, })
program $fib_generator
valid program
