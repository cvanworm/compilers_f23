Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASSIGN_DIVIDE
    ASSIGN_MINUS
    ASSIGN_MOD
    ASSIGN_MULTIPLY
    ASSIGN_PLUS
    COMMENT
    DAND
    DECREMENT
    DEQ
    DOR
    GEQ
    GT
    INCREMENT
    KEYWORD
    K_DO
    K_ELSE
    K_EXIT
    K_IF
    K_READ_DOUBLE
    K_READ_INTEGER
    K_READ_STRING
    K_RETURN
    K_THEN
    K_WHILE
    LBRACKET
    LEQ
    LT
    MOD
    NE
    NOT
    PERIOD
    RBRACKET

Grammar

Rule 0     S' -> program
Rule 1     program -> K_PROGRAM ID LCURLY program_body RCURLY
Rule 2     program_body -> program_body program_body
Rule 3     program_body -> function
Rule 4     program_body -> procedure
Rule 5     program_body -> epsilon
Rule 6     function -> K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY
Rule 7     procedure -> K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements RCURLY
Rule 8     parameter_list -> parameter_list COMMA parameter
Rule 9     parameter_list -> parameter
Rule 10    parameter -> K_INTEGER ID
Rule 11    parameter -> K_DOUBLE ID
Rule 12    parameter -> K_STRING ID
Rule 13    parameter -> epsilon
Rule 14    statements -> statements statements
Rule 15    statements -> declare
Rule 16    statements -> assign
Rule 17    statements -> print
Rule 18    statements -> function_call
Rule 19    statements -> epsilon
Rule 20    declare -> K_INTEGER ID SEMI
Rule 21    declare -> K_DOUBLE ID SEMI
Rule 22    assign -> ID ASSIGN ICONSTANT SEMI
Rule 23    assign -> ID ASSIGN DCONSTANT SEMI
Rule 24    assign -> ID ASSIGN SCONSTANT SEMI
Rule 25    assign -> ID ASSIGN math SEMI
Rule 26    print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI
Rule 27    print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI
Rule 28    print -> K_PRINT_STRING LPAREN ID RPAREN SEMI
Rule 29    print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI
Rule 30    function_call -> ID LPAREN ID RPAREN SEMI
Rule 31    math -> expression
Rule 32    expression -> expression PLUS term
Rule 33    expression -> expression MINUS term
Rule 34    expression -> term
Rule 35    term -> term TIMES factor
Rule 36    term -> term DIVIDE factor
Rule 37    term -> factor
Rule 38    factor -> LPAREN expression RPAREN
Rule 39    factor -> MINUS LPAREN expression RPAREN
Rule 40    factor -> ICONSTANT
Rule 41    factor -> DCONSTANT
Rule 42    factor -> ID
Rule 43    epsilon -> <empty>

Terminals, with rules where they appear

ASSIGN               : 22 23 24 25
ASSIGN_DIVIDE        : 
ASSIGN_MINUS         : 
ASSIGN_MOD           : 
ASSIGN_MULTIPLY      : 
ASSIGN_PLUS          : 
COMMA                : 8
COMMENT              : 
DAND                 : 
DCONSTANT            : 23 41
DECREMENT            : 
DEQ                  : 
DIVIDE               : 36
DOR                  : 
GEQ                  : 
GT                   : 
ICONSTANT            : 22 40
ID                   : 1 6 7 10 11 12 20 21 22 23 24 25 26 28 29 30 30 42
INCREMENT            : 
KEYWORD              : 
K_DO                 : 
K_DOUBLE             : 11 21
K_ELSE               : 
K_EXIT               : 
K_FUNCTION           : 6
K_IF                 : 
K_INTEGER            : 6 10 20
K_PRINT_DOUBLE       : 29
K_PRINT_INTEGER      : 26
K_PRINT_STRING       : 27 28
K_PROCEDURE          : 7
K_PROGRAM            : 1
K_READ_DOUBLE        : 
K_READ_INTEGER       : 
K_READ_STRING        : 
K_RETURN             : 
K_STRING             : 12
K_THEN               : 
K_WHILE              : 
LBRACKET             : 
LCURLY               : 1 6 7
LEQ                  : 
LPAREN               : 6 7 26 27 28 29 30 38 39
LT                   : 
MINUS                : 33 39
MOD                  : 
NE                   : 
NOT                  : 
PERIOD               : 
PLUS                 : 32
RBRACKET             : 
RCURLY               : 1 6 7
RPAREN               : 6 7 26 27 28 29 30 38 39
SCONSTANT            : 24 27
SEMI                 : 20 21 22 23 24 25 26 27 28 29 30
TIMES                : 35
error                : 

Nonterminals, with rules where they appear

assign               : 16
declare              : 15
epsilon              : 5 13 19
expression           : 31 32 33 38 39
factor               : 35 36 37
function             : 3
function_call        : 18
math                 : 25
parameter            : 8 9
parameter_list       : 7 8
print                : 17
procedure            : 4
program              : 0
program_body         : 1 2 2
statements           : 6 7 14 14
term                 : 32 33 34 35 36

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . K_PROGRAM ID LCURLY program_body RCURLY

    K_PROGRAM       shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> K_PROGRAM . ID LCURLY program_body RCURLY

    ID              shift and go to state 3


state 3

    (1) program -> K_PROGRAM ID . LCURLY program_body RCURLY

    LCURLY          shift and go to state 4


state 4

    (1) program -> K_PROGRAM ID LCURLY . program_body RCURLY
    (2) program_body -> . program_body program_body
    (3) program_body -> . function
    (4) program_body -> . procedure
    (5) program_body -> . epsilon
    (6) function -> . K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY
    (7) procedure -> . K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements RCURLY
    (43) epsilon -> .

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 43 (epsilon -> .)

  ! K_FUNCTION      [ reduce using rule 43 (epsilon -> .) ]
  ! K_PROCEDURE     [ reduce using rule 43 (epsilon -> .) ]

    program_body                   shift and go to state 5
    function                       shift and go to state 6
    procedure                      shift and go to state 7
    epsilon                        shift and go to state 8

state 5

    (1) program -> K_PROGRAM ID LCURLY program_body . RCURLY
    (2) program_body -> program_body . program_body
    (2) program_body -> . program_body program_body
    (3) program_body -> . function
    (4) program_body -> . procedure
    (5) program_body -> . epsilon
    (6) function -> . K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY
    (7) procedure -> . K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements RCURLY
    (43) epsilon -> .

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for RCURLY resolved as shift
    RCURLY          shift and go to state 12
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10

  ! K_FUNCTION      [ reduce using rule 43 (epsilon -> .) ]
  ! K_PROCEDURE     [ reduce using rule 43 (epsilon -> .) ]
  ! RCURLY          [ reduce using rule 43 (epsilon -> .) ]

    program_body                   shift and go to state 11
    function                       shift and go to state 6
    procedure                      shift and go to state 7
    epsilon                        shift and go to state 8

state 6

    (3) program_body -> function .

    RCURLY          reduce using rule 3 (program_body -> function .)
    K_FUNCTION      reduce using rule 3 (program_body -> function .)
    K_PROCEDURE     reduce using rule 3 (program_body -> function .)


state 7

    (4) program_body -> procedure .

    RCURLY          reduce using rule 4 (program_body -> procedure .)
    K_FUNCTION      reduce using rule 4 (program_body -> procedure .)
    K_PROCEDURE     reduce using rule 4 (program_body -> procedure .)


state 8

    (5) program_body -> epsilon .

    RCURLY          reduce using rule 5 (program_body -> epsilon .)
    K_FUNCTION      reduce using rule 5 (program_body -> epsilon .)
    K_PROCEDURE     reduce using rule 5 (program_body -> epsilon .)


state 9

    (6) function -> K_FUNCTION . K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY

    K_INTEGER       shift and go to state 13


state 10

    (7) procedure -> K_PROCEDURE . ID LPAREN parameter_list RPAREN LCURLY statements RCURLY

    ID              shift and go to state 14


state 11

    (2) program_body -> program_body program_body .
    (2) program_body -> program_body . program_body
    (2) program_body -> . program_body program_body
    (3) program_body -> . function
    (4) program_body -> . procedure
    (5) program_body -> . epsilon
    (6) function -> . K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY
    (7) procedure -> . K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements RCURLY
    (43) epsilon -> .

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! reduce/reduce conflict for RCURLY resolved using rule 2 (program_body -> program_body program_body .)
    RCURLY          reduce using rule 2 (program_body -> program_body program_body .)
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10

  ! K_FUNCTION      [ reduce using rule 2 (program_body -> program_body program_body .) ]
  ! K_PROCEDURE     [ reduce using rule 2 (program_body -> program_body program_body .) ]
  ! K_FUNCTION      [ reduce using rule 43 (epsilon -> .) ]
  ! K_PROCEDURE     [ reduce using rule 43 (epsilon -> .) ]
  ! RCURLY          [ reduce using rule 43 (epsilon -> .) ]

    program_body                   shift and go to state 11
    function                       shift and go to state 6
    procedure                      shift and go to state 7
    epsilon                        shift and go to state 8

state 12

    (1) program -> K_PROGRAM ID LCURLY program_body RCURLY .

    $end            reduce using rule 1 (program -> K_PROGRAM ID LCURLY program_body RCURLY .)


state 13

    (6) function -> K_FUNCTION K_INTEGER . ID LPAREN RPAREN LCURLY statements RCURLY

    ID              shift and go to state 15


state 14

    (7) procedure -> K_PROCEDURE ID . LPAREN parameter_list RPAREN LCURLY statements RCURLY

    LPAREN          shift and go to state 16


state 15

    (6) function -> K_FUNCTION K_INTEGER ID . LPAREN RPAREN LCURLY statements RCURLY

    LPAREN          shift and go to state 17


state 16

    (7) procedure -> K_PROCEDURE ID LPAREN . parameter_list RPAREN LCURLY statements RCURLY
    (8) parameter_list -> . parameter_list COMMA parameter
    (9) parameter_list -> . parameter
    (10) parameter -> . K_INTEGER ID
    (11) parameter -> . K_DOUBLE ID
    (12) parameter -> . K_STRING ID
    (13) parameter -> . epsilon
    (43) epsilon -> .

    K_INTEGER       shift and go to state 20
    K_DOUBLE        shift and go to state 21
    K_STRING        shift and go to state 22
    RPAREN          reduce using rule 43 (epsilon -> .)
    COMMA           reduce using rule 43 (epsilon -> .)

    parameter_list                 shift and go to state 18
    parameter                      shift and go to state 19
    epsilon                        shift and go to state 23

state 17

    (6) function -> K_FUNCTION K_INTEGER ID LPAREN . RPAREN LCURLY statements RCURLY

    RPAREN          shift and go to state 24


state 18

    (7) procedure -> K_PROCEDURE ID LPAREN parameter_list . RPAREN LCURLY statements RCURLY
    (8) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 25
    COMMA           shift and go to state 26


state 19

    (9) parameter_list -> parameter .

    RPAREN          reduce using rule 9 (parameter_list -> parameter .)
    COMMA           reduce using rule 9 (parameter_list -> parameter .)


state 20

    (10) parameter -> K_INTEGER . ID

    ID              shift and go to state 27


state 21

    (11) parameter -> K_DOUBLE . ID

    ID              shift and go to state 28


state 22

    (12) parameter -> K_STRING . ID

    ID              shift and go to state 29


state 23

    (13) parameter -> epsilon .

    RPAREN          reduce using rule 13 (parameter -> epsilon .)
    COMMA           reduce using rule 13 (parameter -> epsilon .)


state 24

    (6) function -> K_FUNCTION K_INTEGER ID LPAREN RPAREN . LCURLY statements RCURLY

    LCURLY          shift and go to state 30


state 25

    (7) procedure -> K_PROCEDURE ID LPAREN parameter_list RPAREN . LCURLY statements RCURLY

    LCURLY          shift and go to state 31


state 26

    (8) parameter_list -> parameter_list COMMA . parameter
    (10) parameter -> . K_INTEGER ID
    (11) parameter -> . K_DOUBLE ID
    (12) parameter -> . K_STRING ID
    (13) parameter -> . epsilon
    (43) epsilon -> .

    K_INTEGER       shift and go to state 20
    K_DOUBLE        shift and go to state 21
    K_STRING        shift and go to state 22
    RPAREN          reduce using rule 43 (epsilon -> .)
    COMMA           reduce using rule 43 (epsilon -> .)

    parameter                      shift and go to state 32
    epsilon                        shift and go to state 23

state 27

    (10) parameter -> K_INTEGER ID .

    RPAREN          reduce using rule 10 (parameter -> K_INTEGER ID .)
    COMMA           reduce using rule 10 (parameter -> K_INTEGER ID .)


state 28

    (11) parameter -> K_DOUBLE ID .

    RPAREN          reduce using rule 11 (parameter -> K_DOUBLE ID .)
    COMMA           reduce using rule 11 (parameter -> K_DOUBLE ID .)


state 29

    (12) parameter -> K_STRING ID .

    RPAREN          reduce using rule 12 (parameter -> K_STRING ID .)
    COMMA           reduce using rule 12 (parameter -> K_STRING ID .)


state 30

    (6) function -> K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY . statements RCURLY
    (14) statements -> . statements statements
    (15) statements -> . declare
    (16) statements -> . assign
    (17) statements -> . print
    (18) statements -> . function_call
    (19) statements -> . epsilon
    (20) declare -> . K_INTEGER ID SEMI
    (21) declare -> . K_DOUBLE ID SEMI
    (22) assign -> . ID ASSIGN ICONSTANT SEMI
    (23) assign -> . ID ASSIGN DCONSTANT SEMI
    (24) assign -> . ID ASSIGN SCONSTANT SEMI
    (25) assign -> . ID ASSIGN math SEMI
    (26) print -> . K_PRINT_INTEGER LPAREN ID RPAREN SEMI
    (27) print -> . K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI
    (28) print -> . K_PRINT_STRING LPAREN ID RPAREN SEMI
    (29) print -> . K_PRINT_DOUBLE LPAREN ID RPAREN SEMI
    (30) function_call -> . ID LPAREN ID RPAREN SEMI
    (43) epsilon -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
    K_INTEGER       shift and go to state 33
    K_DOUBLE        shift and go to state 41
    ID              shift and go to state 34
    K_PRINT_INTEGER shift and go to state 42
    K_PRINT_STRING  shift and go to state 43
    K_PRINT_DOUBLE  shift and go to state 44
    RCURLY          reduce using rule 43 (epsilon -> .)

  ! K_INTEGER       [ reduce using rule 43 (epsilon -> .) ]
  ! K_DOUBLE        [ reduce using rule 43 (epsilon -> .) ]
  ! ID              [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 43 (epsilon -> .) ]

    statements                     shift and go to state 35
    declare                        shift and go to state 36
    assign                         shift and go to state 37
    print                          shift and go to state 38
    function_call                  shift and go to state 39
    epsilon                        shift and go to state 40

state 31

    (7) procedure -> K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY . statements RCURLY
    (14) statements -> . statements statements
    (15) statements -> . declare
    (16) statements -> . assign
    (17) statements -> . print
    (18) statements -> . function_call
    (19) statements -> . epsilon
    (20) declare -> . K_INTEGER ID SEMI
    (21) declare -> . K_DOUBLE ID SEMI
    (22) assign -> . ID ASSIGN ICONSTANT SEMI
    (23) assign -> . ID ASSIGN DCONSTANT SEMI
    (24) assign -> . ID ASSIGN SCONSTANT SEMI
    (25) assign -> . ID ASSIGN math SEMI
    (26) print -> . K_PRINT_INTEGER LPAREN ID RPAREN SEMI
    (27) print -> . K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI
    (28) print -> . K_PRINT_STRING LPAREN ID RPAREN SEMI
    (29) print -> . K_PRINT_DOUBLE LPAREN ID RPAREN SEMI
    (30) function_call -> . ID LPAREN ID RPAREN SEMI
    (43) epsilon -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
    K_INTEGER       shift and go to state 33
    K_DOUBLE        shift and go to state 41
    ID              shift and go to state 34
    K_PRINT_INTEGER shift and go to state 42
    K_PRINT_STRING  shift and go to state 43
    K_PRINT_DOUBLE  shift and go to state 44
    RCURLY          reduce using rule 43 (epsilon -> .)

  ! K_INTEGER       [ reduce using rule 43 (epsilon -> .) ]
  ! K_DOUBLE        [ reduce using rule 43 (epsilon -> .) ]
  ! ID              [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 43 (epsilon -> .) ]

    statements                     shift and go to state 45
    declare                        shift and go to state 36
    assign                         shift and go to state 37
    print                          shift and go to state 38
    function_call                  shift and go to state 39
    epsilon                        shift and go to state 40

state 32

    (8) parameter_list -> parameter_list COMMA parameter .

    RPAREN          reduce using rule 8 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 8 (parameter_list -> parameter_list COMMA parameter .)


state 33

    (20) declare -> K_INTEGER . ID SEMI

    ID              shift and go to state 46


state 34

    (22) assign -> ID . ASSIGN ICONSTANT SEMI
    (23) assign -> ID . ASSIGN DCONSTANT SEMI
    (24) assign -> ID . ASSIGN SCONSTANT SEMI
    (25) assign -> ID . ASSIGN math SEMI
    (30) function_call -> ID . LPAREN ID RPAREN SEMI

    ASSIGN          shift and go to state 47
    LPAREN          shift and go to state 48


state 35

    (6) function -> K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements . RCURLY
    (14) statements -> statements . statements
    (14) statements -> . statements statements
    (15) statements -> . declare
    (16) statements -> . assign
    (17) statements -> . print
    (18) statements -> . function_call
    (19) statements -> . epsilon
    (20) declare -> . K_INTEGER ID SEMI
    (21) declare -> . K_DOUBLE ID SEMI
    (22) assign -> . ID ASSIGN ICONSTANT SEMI
    (23) assign -> . ID ASSIGN DCONSTANT SEMI
    (24) assign -> . ID ASSIGN SCONSTANT SEMI
    (25) assign -> . ID ASSIGN math SEMI
    (26) print -> . K_PRINT_INTEGER LPAREN ID RPAREN SEMI
    (27) print -> . K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI
    (28) print -> . K_PRINT_STRING LPAREN ID RPAREN SEMI
    (29) print -> . K_PRINT_DOUBLE LPAREN ID RPAREN SEMI
    (30) function_call -> . ID LPAREN ID RPAREN SEMI
    (43) epsilon -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for RCURLY resolved as shift
    RCURLY          shift and go to state 50
    K_INTEGER       shift and go to state 33
    K_DOUBLE        shift and go to state 41
    ID              shift and go to state 34
    K_PRINT_INTEGER shift and go to state 42
    K_PRINT_STRING  shift and go to state 43
    K_PRINT_DOUBLE  shift and go to state 44

  ! K_INTEGER       [ reduce using rule 43 (epsilon -> .) ]
  ! K_DOUBLE        [ reduce using rule 43 (epsilon -> .) ]
  ! ID              [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 43 (epsilon -> .) ]
  ! RCURLY          [ reduce using rule 43 (epsilon -> .) ]

    statements                     shift and go to state 49
    declare                        shift and go to state 36
    assign                         shift and go to state 37
    print                          shift and go to state 38
    function_call                  shift and go to state 39
    epsilon                        shift and go to state 40

state 36

    (15) statements -> declare .

    RCURLY          reduce using rule 15 (statements -> declare .)
    K_INTEGER       reduce using rule 15 (statements -> declare .)
    K_DOUBLE        reduce using rule 15 (statements -> declare .)
    ID              reduce using rule 15 (statements -> declare .)
    K_PRINT_INTEGER reduce using rule 15 (statements -> declare .)
    K_PRINT_STRING  reduce using rule 15 (statements -> declare .)
    K_PRINT_DOUBLE  reduce using rule 15 (statements -> declare .)


state 37

    (16) statements -> assign .

    RCURLY          reduce using rule 16 (statements -> assign .)
    K_INTEGER       reduce using rule 16 (statements -> assign .)
    K_DOUBLE        reduce using rule 16 (statements -> assign .)
    ID              reduce using rule 16 (statements -> assign .)
    K_PRINT_INTEGER reduce using rule 16 (statements -> assign .)
    K_PRINT_STRING  reduce using rule 16 (statements -> assign .)
    K_PRINT_DOUBLE  reduce using rule 16 (statements -> assign .)


state 38

    (17) statements -> print .

    RCURLY          reduce using rule 17 (statements -> print .)
    K_INTEGER       reduce using rule 17 (statements -> print .)
    K_DOUBLE        reduce using rule 17 (statements -> print .)
    ID              reduce using rule 17 (statements -> print .)
    K_PRINT_INTEGER reduce using rule 17 (statements -> print .)
    K_PRINT_STRING  reduce using rule 17 (statements -> print .)
    K_PRINT_DOUBLE  reduce using rule 17 (statements -> print .)


state 39

    (18) statements -> function_call .

    RCURLY          reduce using rule 18 (statements -> function_call .)
    K_INTEGER       reduce using rule 18 (statements -> function_call .)
    K_DOUBLE        reduce using rule 18 (statements -> function_call .)
    ID              reduce using rule 18 (statements -> function_call .)
    K_PRINT_INTEGER reduce using rule 18 (statements -> function_call .)
    K_PRINT_STRING  reduce using rule 18 (statements -> function_call .)
    K_PRINT_DOUBLE  reduce using rule 18 (statements -> function_call .)


state 40

    (19) statements -> epsilon .

    RCURLY          reduce using rule 19 (statements -> epsilon .)
    K_INTEGER       reduce using rule 19 (statements -> epsilon .)
    K_DOUBLE        reduce using rule 19 (statements -> epsilon .)
    ID              reduce using rule 19 (statements -> epsilon .)
    K_PRINT_INTEGER reduce using rule 19 (statements -> epsilon .)
    K_PRINT_STRING  reduce using rule 19 (statements -> epsilon .)
    K_PRINT_DOUBLE  reduce using rule 19 (statements -> epsilon .)


state 41

    (21) declare -> K_DOUBLE . ID SEMI

    ID              shift and go to state 51


state 42

    (26) print -> K_PRINT_INTEGER . LPAREN ID RPAREN SEMI

    LPAREN          shift and go to state 52


state 43

    (27) print -> K_PRINT_STRING . LPAREN SCONSTANT RPAREN SEMI
    (28) print -> K_PRINT_STRING . LPAREN ID RPAREN SEMI

    LPAREN          shift and go to state 53


state 44

    (29) print -> K_PRINT_DOUBLE . LPAREN ID RPAREN SEMI

    LPAREN          shift and go to state 54


state 45

    (7) procedure -> K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements . RCURLY
    (14) statements -> statements . statements
    (14) statements -> . statements statements
    (15) statements -> . declare
    (16) statements -> . assign
    (17) statements -> . print
    (18) statements -> . function_call
    (19) statements -> . epsilon
    (20) declare -> . K_INTEGER ID SEMI
    (21) declare -> . K_DOUBLE ID SEMI
    (22) assign -> . ID ASSIGN ICONSTANT SEMI
    (23) assign -> . ID ASSIGN DCONSTANT SEMI
    (24) assign -> . ID ASSIGN SCONSTANT SEMI
    (25) assign -> . ID ASSIGN math SEMI
    (26) print -> . K_PRINT_INTEGER LPAREN ID RPAREN SEMI
    (27) print -> . K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI
    (28) print -> . K_PRINT_STRING LPAREN ID RPAREN SEMI
    (29) print -> . K_PRINT_DOUBLE LPAREN ID RPAREN SEMI
    (30) function_call -> . ID LPAREN ID RPAREN SEMI
    (43) epsilon -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for RCURLY resolved as shift
    RCURLY          shift and go to state 55
    K_INTEGER       shift and go to state 33
    K_DOUBLE        shift and go to state 41
    ID              shift and go to state 34
    K_PRINT_INTEGER shift and go to state 42
    K_PRINT_STRING  shift and go to state 43
    K_PRINT_DOUBLE  shift and go to state 44

  ! K_INTEGER       [ reduce using rule 43 (epsilon -> .) ]
  ! K_DOUBLE        [ reduce using rule 43 (epsilon -> .) ]
  ! ID              [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 43 (epsilon -> .) ]
  ! RCURLY          [ reduce using rule 43 (epsilon -> .) ]

    statements                     shift and go to state 49
    declare                        shift and go to state 36
    assign                         shift and go to state 37
    print                          shift and go to state 38
    function_call                  shift and go to state 39
    epsilon                        shift and go to state 40

state 46

    (20) declare -> K_INTEGER ID . SEMI

    SEMI            shift and go to state 56


state 47

    (22) assign -> ID ASSIGN . ICONSTANT SEMI
    (23) assign -> ID ASSIGN . DCONSTANT SEMI
    (24) assign -> ID ASSIGN . SCONSTANT SEMI
    (25) assign -> ID ASSIGN . math SEMI
    (31) math -> . expression
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . MINUS LPAREN expression RPAREN
    (40) factor -> . ICONSTANT
    (41) factor -> . DCONSTANT
    (42) factor -> . ID

    ICONSTANT       shift and go to state 58
    DCONSTANT       shift and go to state 59
    SCONSTANT       shift and go to state 60
    LPAREN          shift and go to state 66
    MINUS           shift and go to state 64
    ID              shift and go to state 57

    math                           shift and go to state 61
    expression                     shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 48

    (30) function_call -> ID LPAREN . ID RPAREN SEMI

    ID              shift and go to state 67


state 49

    (14) statements -> statements statements .
    (14) statements -> statements . statements
    (14) statements -> . statements statements
    (15) statements -> . declare
    (16) statements -> . assign
    (17) statements -> . print
    (18) statements -> . function_call
    (19) statements -> . epsilon
    (20) declare -> . K_INTEGER ID SEMI
    (21) declare -> . K_DOUBLE ID SEMI
    (22) assign -> . ID ASSIGN ICONSTANT SEMI
    (23) assign -> . ID ASSIGN DCONSTANT SEMI
    (24) assign -> . ID ASSIGN SCONSTANT SEMI
    (25) assign -> . ID ASSIGN math SEMI
    (26) print -> . K_PRINT_INTEGER LPAREN ID RPAREN SEMI
    (27) print -> . K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI
    (28) print -> . K_PRINT_STRING LPAREN ID RPAREN SEMI
    (29) print -> . K_PRINT_DOUBLE LPAREN ID RPAREN SEMI
    (30) function_call -> . ID LPAREN ID RPAREN SEMI
    (43) epsilon -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! reduce/reduce conflict for RCURLY resolved using rule 14 (statements -> statements statements .)
    RCURLY          reduce using rule 14 (statements -> statements statements .)
    K_INTEGER       shift and go to state 33
    K_DOUBLE        shift and go to state 41
    ID              shift and go to state 34
    K_PRINT_INTEGER shift and go to state 42
    K_PRINT_STRING  shift and go to state 43
    K_PRINT_DOUBLE  shift and go to state 44

  ! K_INTEGER       [ reduce using rule 14 (statements -> statements statements .) ]
  ! K_DOUBLE        [ reduce using rule 14 (statements -> statements statements .) ]
  ! ID              [ reduce using rule 14 (statements -> statements statements .) ]
  ! K_PRINT_INTEGER [ reduce using rule 14 (statements -> statements statements .) ]
  ! K_PRINT_STRING  [ reduce using rule 14 (statements -> statements statements .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 14 (statements -> statements statements .) ]
  ! K_INTEGER       [ reduce using rule 43 (epsilon -> .) ]
  ! K_DOUBLE        [ reduce using rule 43 (epsilon -> .) ]
  ! ID              [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 43 (epsilon -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 43 (epsilon -> .) ]
  ! RCURLY          [ reduce using rule 43 (epsilon -> .) ]

    statements                     shift and go to state 49
    declare                        shift and go to state 36
    assign                         shift and go to state 37
    print                          shift and go to state 38
    function_call                  shift and go to state 39
    epsilon                        shift and go to state 40

state 50

    (6) function -> K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY .

    RCURLY          reduce using rule 6 (function -> K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY .)
    K_FUNCTION      reduce using rule 6 (function -> K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY .)
    K_PROCEDURE     reduce using rule 6 (function -> K_FUNCTION K_INTEGER ID LPAREN RPAREN LCURLY statements RCURLY .)


state 51

    (21) declare -> K_DOUBLE ID . SEMI

    SEMI            shift and go to state 68


state 52

    (26) print -> K_PRINT_INTEGER LPAREN . ID RPAREN SEMI

    ID              shift and go to state 69


state 53

    (27) print -> K_PRINT_STRING LPAREN . SCONSTANT RPAREN SEMI
    (28) print -> K_PRINT_STRING LPAREN . ID RPAREN SEMI

    SCONSTANT       shift and go to state 70
    ID              shift and go to state 71


state 54

    (29) print -> K_PRINT_DOUBLE LPAREN . ID RPAREN SEMI

    ID              shift and go to state 72


state 55

    (7) procedure -> K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements RCURLY .

    RCURLY          reduce using rule 7 (procedure -> K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements RCURLY .)
    K_FUNCTION      reduce using rule 7 (procedure -> K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements RCURLY .)
    K_PROCEDURE     reduce using rule 7 (procedure -> K_PROCEDURE ID LPAREN parameter_list RPAREN LCURLY statements RCURLY .)


state 56

    (20) declare -> K_INTEGER ID SEMI .

    RCURLY          reduce using rule 20 (declare -> K_INTEGER ID SEMI .)
    K_INTEGER       reduce using rule 20 (declare -> K_INTEGER ID SEMI .)
    K_DOUBLE        reduce using rule 20 (declare -> K_INTEGER ID SEMI .)
    ID              reduce using rule 20 (declare -> K_INTEGER ID SEMI .)
    K_PRINT_INTEGER reduce using rule 20 (declare -> K_INTEGER ID SEMI .)
    K_PRINT_STRING  reduce using rule 20 (declare -> K_INTEGER ID SEMI .)
    K_PRINT_DOUBLE  reduce using rule 20 (declare -> K_INTEGER ID SEMI .)


state 57

    (42) factor -> ID .

    TIMES           reduce using rule 42 (factor -> ID .)
    DIVIDE          reduce using rule 42 (factor -> ID .)
    PLUS            reduce using rule 42 (factor -> ID .)
    MINUS           reduce using rule 42 (factor -> ID .)
    SEMI            reduce using rule 42 (factor -> ID .)
    RPAREN          reduce using rule 42 (factor -> ID .)


state 58

    (22) assign -> ID ASSIGN ICONSTANT . SEMI
    (40) factor -> ICONSTANT .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 73
    TIMES           reduce using rule 40 (factor -> ICONSTANT .)
    DIVIDE          reduce using rule 40 (factor -> ICONSTANT .)
    PLUS            reduce using rule 40 (factor -> ICONSTANT .)
    MINUS           reduce using rule 40 (factor -> ICONSTANT .)

  ! SEMI            [ reduce using rule 40 (factor -> ICONSTANT .) ]


state 59

    (23) assign -> ID ASSIGN DCONSTANT . SEMI
    (41) factor -> DCONSTANT .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 74
    TIMES           reduce using rule 41 (factor -> DCONSTANT .)
    DIVIDE          reduce using rule 41 (factor -> DCONSTANT .)
    PLUS            reduce using rule 41 (factor -> DCONSTANT .)
    MINUS           reduce using rule 41 (factor -> DCONSTANT .)

  ! SEMI            [ reduce using rule 41 (factor -> DCONSTANT .) ]


state 60

    (24) assign -> ID ASSIGN SCONSTANT . SEMI

    SEMI            shift and go to state 75


state 61

    (25) assign -> ID ASSIGN math . SEMI

    SEMI            shift and go to state 76


state 62

    (31) math -> expression .
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    SEMI            reduce using rule 31 (math -> expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78


state 63

    (34) expression -> term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor

    PLUS            reduce using rule 34 (expression -> term .)
    MINUS           reduce using rule 34 (expression -> term .)
    SEMI            reduce using rule 34 (expression -> term .)
    RPAREN          reduce using rule 34 (expression -> term .)
    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 80


state 64

    (39) factor -> MINUS . LPAREN expression RPAREN

    LPAREN          shift and go to state 81


state 65

    (37) term -> factor .

    TIMES           reduce using rule 37 (term -> factor .)
    DIVIDE          reduce using rule 37 (term -> factor .)
    PLUS            reduce using rule 37 (term -> factor .)
    MINUS           reduce using rule 37 (term -> factor .)
    SEMI            reduce using rule 37 (term -> factor .)
    RPAREN          reduce using rule 37 (term -> factor .)


state 66

    (38) factor -> LPAREN . expression RPAREN
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . MINUS LPAREN expression RPAREN
    (40) factor -> . ICONSTANT
    (41) factor -> . DCONSTANT
    (42) factor -> . ID

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 64
    ICONSTANT       shift and go to state 83
    DCONSTANT       shift and go to state 84
    ID              shift and go to state 57

    expression                     shift and go to state 82
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 67

    (30) function_call -> ID LPAREN ID . RPAREN SEMI

    RPAREN          shift and go to state 85


state 68

    (21) declare -> K_DOUBLE ID SEMI .

    RCURLY          reduce using rule 21 (declare -> K_DOUBLE ID SEMI .)
    K_INTEGER       reduce using rule 21 (declare -> K_DOUBLE ID SEMI .)
    K_DOUBLE        reduce using rule 21 (declare -> K_DOUBLE ID SEMI .)
    ID              reduce using rule 21 (declare -> K_DOUBLE ID SEMI .)
    K_PRINT_INTEGER reduce using rule 21 (declare -> K_DOUBLE ID SEMI .)
    K_PRINT_STRING  reduce using rule 21 (declare -> K_DOUBLE ID SEMI .)
    K_PRINT_DOUBLE  reduce using rule 21 (declare -> K_DOUBLE ID SEMI .)


state 69

    (26) print -> K_PRINT_INTEGER LPAREN ID . RPAREN SEMI

    RPAREN          shift and go to state 86


state 70

    (27) print -> K_PRINT_STRING LPAREN SCONSTANT . RPAREN SEMI

    RPAREN          shift and go to state 87


state 71

    (28) print -> K_PRINT_STRING LPAREN ID . RPAREN SEMI

    RPAREN          shift and go to state 88


state 72

    (29) print -> K_PRINT_DOUBLE LPAREN ID . RPAREN SEMI

    RPAREN          shift and go to state 89


state 73

    (22) assign -> ID ASSIGN ICONSTANT SEMI .

    RCURLY          reduce using rule 22 (assign -> ID ASSIGN ICONSTANT SEMI .)
    K_INTEGER       reduce using rule 22 (assign -> ID ASSIGN ICONSTANT SEMI .)
    K_DOUBLE        reduce using rule 22 (assign -> ID ASSIGN ICONSTANT SEMI .)
    ID              reduce using rule 22 (assign -> ID ASSIGN ICONSTANT SEMI .)
    K_PRINT_INTEGER reduce using rule 22 (assign -> ID ASSIGN ICONSTANT SEMI .)
    K_PRINT_STRING  reduce using rule 22 (assign -> ID ASSIGN ICONSTANT SEMI .)
    K_PRINT_DOUBLE  reduce using rule 22 (assign -> ID ASSIGN ICONSTANT SEMI .)


state 74

    (23) assign -> ID ASSIGN DCONSTANT SEMI .

    RCURLY          reduce using rule 23 (assign -> ID ASSIGN DCONSTANT SEMI .)
    K_INTEGER       reduce using rule 23 (assign -> ID ASSIGN DCONSTANT SEMI .)
    K_DOUBLE        reduce using rule 23 (assign -> ID ASSIGN DCONSTANT SEMI .)
    ID              reduce using rule 23 (assign -> ID ASSIGN DCONSTANT SEMI .)
    K_PRINT_INTEGER reduce using rule 23 (assign -> ID ASSIGN DCONSTANT SEMI .)
    K_PRINT_STRING  reduce using rule 23 (assign -> ID ASSIGN DCONSTANT SEMI .)
    K_PRINT_DOUBLE  reduce using rule 23 (assign -> ID ASSIGN DCONSTANT SEMI .)


state 75

    (24) assign -> ID ASSIGN SCONSTANT SEMI .

    RCURLY          reduce using rule 24 (assign -> ID ASSIGN SCONSTANT SEMI .)
    K_INTEGER       reduce using rule 24 (assign -> ID ASSIGN SCONSTANT SEMI .)
    K_DOUBLE        reduce using rule 24 (assign -> ID ASSIGN SCONSTANT SEMI .)
    ID              reduce using rule 24 (assign -> ID ASSIGN SCONSTANT SEMI .)
    K_PRINT_INTEGER reduce using rule 24 (assign -> ID ASSIGN SCONSTANT SEMI .)
    K_PRINT_STRING  reduce using rule 24 (assign -> ID ASSIGN SCONSTANT SEMI .)
    K_PRINT_DOUBLE  reduce using rule 24 (assign -> ID ASSIGN SCONSTANT SEMI .)


state 76

    (25) assign -> ID ASSIGN math SEMI .

    RCURLY          reduce using rule 25 (assign -> ID ASSIGN math SEMI .)
    K_INTEGER       reduce using rule 25 (assign -> ID ASSIGN math SEMI .)
    K_DOUBLE        reduce using rule 25 (assign -> ID ASSIGN math SEMI .)
    ID              reduce using rule 25 (assign -> ID ASSIGN math SEMI .)
    K_PRINT_INTEGER reduce using rule 25 (assign -> ID ASSIGN math SEMI .)
    K_PRINT_STRING  reduce using rule 25 (assign -> ID ASSIGN math SEMI .)
    K_PRINT_DOUBLE  reduce using rule 25 (assign -> ID ASSIGN math SEMI .)


state 77

    (32) expression -> expression PLUS . term
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . MINUS LPAREN expression RPAREN
    (40) factor -> . ICONSTANT
    (41) factor -> . DCONSTANT
    (42) factor -> . ID

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 64
    ICONSTANT       shift and go to state 83
    DCONSTANT       shift and go to state 84
    ID              shift and go to state 57

    term                           shift and go to state 90
    factor                         shift and go to state 65

state 78

    (33) expression -> expression MINUS . term
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . MINUS LPAREN expression RPAREN
    (40) factor -> . ICONSTANT
    (41) factor -> . DCONSTANT
    (42) factor -> . ID

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 64
    ICONSTANT       shift and go to state 83
    DCONSTANT       shift and go to state 84
    ID              shift and go to state 57

    term                           shift and go to state 91
    factor                         shift and go to state 65

state 79

    (35) term -> term TIMES . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . MINUS LPAREN expression RPAREN
    (40) factor -> . ICONSTANT
    (41) factor -> . DCONSTANT
    (42) factor -> . ID

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 64
    ICONSTANT       shift and go to state 83
    DCONSTANT       shift and go to state 84
    ID              shift and go to state 57

    factor                         shift and go to state 92

state 80

    (36) term -> term DIVIDE . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . MINUS LPAREN expression RPAREN
    (40) factor -> . ICONSTANT
    (41) factor -> . DCONSTANT
    (42) factor -> . ID

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 64
    ICONSTANT       shift and go to state 83
    DCONSTANT       shift and go to state 84
    ID              shift and go to state 57

    factor                         shift and go to state 93

state 81

    (39) factor -> MINUS LPAREN . expression RPAREN
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . MINUS LPAREN expression RPAREN
    (40) factor -> . ICONSTANT
    (41) factor -> . DCONSTANT
    (42) factor -> . ID

    LPAREN          shift and go to state 66
    MINUS           shift and go to state 64
    ICONSTANT       shift and go to state 83
    DCONSTANT       shift and go to state 84
    ID              shift and go to state 57

    expression                     shift and go to state 94
    term                           shift and go to state 63
    factor                         shift and go to state 65

state 82

    (38) factor -> LPAREN expression . RPAREN
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78


state 83

    (40) factor -> ICONSTANT .

    TIMES           reduce using rule 40 (factor -> ICONSTANT .)
    DIVIDE          reduce using rule 40 (factor -> ICONSTANT .)
    RPAREN          reduce using rule 40 (factor -> ICONSTANT .)
    PLUS            reduce using rule 40 (factor -> ICONSTANT .)
    MINUS           reduce using rule 40 (factor -> ICONSTANT .)
    SEMI            reduce using rule 40 (factor -> ICONSTANT .)


state 84

    (41) factor -> DCONSTANT .

    TIMES           reduce using rule 41 (factor -> DCONSTANT .)
    DIVIDE          reduce using rule 41 (factor -> DCONSTANT .)
    RPAREN          reduce using rule 41 (factor -> DCONSTANT .)
    PLUS            reduce using rule 41 (factor -> DCONSTANT .)
    MINUS           reduce using rule 41 (factor -> DCONSTANT .)
    SEMI            reduce using rule 41 (factor -> DCONSTANT .)


state 85

    (30) function_call -> ID LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 96


state 86

    (26) print -> K_PRINT_INTEGER LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 97


state 87

    (27) print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN . SEMI

    SEMI            shift and go to state 98


state 88

    (28) print -> K_PRINT_STRING LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 99


state 89

    (29) print -> K_PRINT_DOUBLE LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 100


state 90

    (32) expression -> expression PLUS term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor

    PLUS            reduce using rule 32 (expression -> expression PLUS term .)
    MINUS           reduce using rule 32 (expression -> expression PLUS term .)
    SEMI            reduce using rule 32 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 32 (expression -> expression PLUS term .)
    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 80


state 91

    (33) expression -> expression MINUS term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor

    PLUS            reduce using rule 33 (expression -> expression MINUS term .)
    MINUS           reduce using rule 33 (expression -> expression MINUS term .)
    SEMI            reduce using rule 33 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 33 (expression -> expression MINUS term .)
    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 80


state 92

    (35) term -> term TIMES factor .

    TIMES           reduce using rule 35 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 35 (term -> term TIMES factor .)
    PLUS            reduce using rule 35 (term -> term TIMES factor .)
    MINUS           reduce using rule 35 (term -> term TIMES factor .)
    SEMI            reduce using rule 35 (term -> term TIMES factor .)
    RPAREN          reduce using rule 35 (term -> term TIMES factor .)


state 93

    (36) term -> term DIVIDE factor .

    TIMES           reduce using rule 36 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 36 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 36 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 36 (term -> term DIVIDE factor .)
    SEMI            reduce using rule 36 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 36 (term -> term DIVIDE factor .)


state 94

    (39) factor -> MINUS LPAREN expression . RPAREN
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    RPAREN          shift and go to state 101
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78


state 95

    (38) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 38 (factor -> LPAREN expression RPAREN .)


state 96

    (30) function_call -> ID LPAREN ID RPAREN SEMI .

    RCURLY          reduce using rule 30 (function_call -> ID LPAREN ID RPAREN SEMI .)
    K_INTEGER       reduce using rule 30 (function_call -> ID LPAREN ID RPAREN SEMI .)
    K_DOUBLE        reduce using rule 30 (function_call -> ID LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 30 (function_call -> ID LPAREN ID RPAREN SEMI .)
    K_PRINT_INTEGER reduce using rule 30 (function_call -> ID LPAREN ID RPAREN SEMI .)
    K_PRINT_STRING  reduce using rule 30 (function_call -> ID LPAREN ID RPAREN SEMI .)
    K_PRINT_DOUBLE  reduce using rule 30 (function_call -> ID LPAREN ID RPAREN SEMI .)


state 97

    (26) print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI .

    RCURLY          reduce using rule 26 (print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI .)
    K_INTEGER       reduce using rule 26 (print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI .)
    K_DOUBLE        reduce using rule 26 (print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 26 (print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI .)
    K_PRINT_INTEGER reduce using rule 26 (print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI .)
    K_PRINT_STRING  reduce using rule 26 (print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI .)
    K_PRINT_DOUBLE  reduce using rule 26 (print -> K_PRINT_INTEGER LPAREN ID RPAREN SEMI .)


state 98

    (27) print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI .

    RCURLY          reduce using rule 27 (print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI .)
    K_INTEGER       reduce using rule 27 (print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI .)
    K_DOUBLE        reduce using rule 27 (print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI .)
    ID              reduce using rule 27 (print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI .)
    K_PRINT_INTEGER reduce using rule 27 (print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI .)
    K_PRINT_STRING  reduce using rule 27 (print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI .)
    K_PRINT_DOUBLE  reduce using rule 27 (print -> K_PRINT_STRING LPAREN SCONSTANT RPAREN SEMI .)


state 99

    (28) print -> K_PRINT_STRING LPAREN ID RPAREN SEMI .

    RCURLY          reduce using rule 28 (print -> K_PRINT_STRING LPAREN ID RPAREN SEMI .)
    K_INTEGER       reduce using rule 28 (print -> K_PRINT_STRING LPAREN ID RPAREN SEMI .)
    K_DOUBLE        reduce using rule 28 (print -> K_PRINT_STRING LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 28 (print -> K_PRINT_STRING LPAREN ID RPAREN SEMI .)
    K_PRINT_INTEGER reduce using rule 28 (print -> K_PRINT_STRING LPAREN ID RPAREN SEMI .)
    K_PRINT_STRING  reduce using rule 28 (print -> K_PRINT_STRING LPAREN ID RPAREN SEMI .)
    K_PRINT_DOUBLE  reduce using rule 28 (print -> K_PRINT_STRING LPAREN ID RPAREN SEMI .)


state 100

    (29) print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI .

    RCURLY          reduce using rule 29 (print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI .)
    K_INTEGER       reduce using rule 29 (print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI .)
    K_DOUBLE        reduce using rule 29 (print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 29 (print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI .)
    K_PRINT_INTEGER reduce using rule 29 (print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI .)
    K_PRINT_STRING  reduce using rule 29 (print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI .)
    K_PRINT_DOUBLE  reduce using rule 29 (print -> K_PRINT_DOUBLE LPAREN ID RPAREN SEMI .)


state 101

    (39) factor -> MINUS LPAREN expression RPAREN .

    TIMES           reduce using rule 39 (factor -> MINUS LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 39 (factor -> MINUS LPAREN expression RPAREN .)
    PLUS            reduce using rule 39 (factor -> MINUS LPAREN expression RPAREN .)
    MINUS           reduce using rule 39 (factor -> MINUS LPAREN expression RPAREN .)
    SEMI            reduce using rule 39 (factor -> MINUS LPAREN expression RPAREN .)
    RPAREN          reduce using rule 39 (factor -> MINUS LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for K_FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 4 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 5 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 5 resolved as shift
WARNING: shift/reduce conflict for RCURLY in state 5 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 11 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 11 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 11 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 11 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 30 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 30 resolved as shift
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 30 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 30 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 30 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 31 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 31 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 31 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 31 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 35 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 35 resolved as shift
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 35 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 35 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 35 resolved as shift
WARNING: shift/reduce conflict for RCURLY in state 35 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 45 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 45 resolved as shift
WARNING: shift/reduce conflict for ID in state 45 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 45 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 45 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 45 resolved as shift
WARNING: shift/reduce conflict for RCURLY in state 45 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 49 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 49 resolved as shift
WARNING: shift/reduce conflict for ID in state 49 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 49 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 49 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 49 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 49 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 49 resolved as shift
WARNING: shift/reduce conflict for ID in state 49 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 49 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 49 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 49 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 58 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 59 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (program_body -> program_body program_body)
WARNING: rejected rule (epsilon -> <empty>) in state 11
WARNING: reduce/reduce conflict in state 49 resolved using rule (statements -> statements statements)
WARNING: rejected rule (epsilon -> <empty>) in state 49
