
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COMMENT DCONSTANT DOUBLE FUNCTION ICONSTANT ID INTEGER KEYWORD LCURLY LPAREN PRINT_DOUBLE PRINT_INTEGER PRINT_STRING PROGRAM RCURLY RPAREN SCONSTANT SEMIprogram : PROGRAM ID LCURLY function RCURLYfunction : FUNCTION INTEGER ID LPAREN RPAREN LCURLY statements RCURLYstatements : statements statementsstatements : epsilonstatements : declare \n                | assign \n                | print declare : INTEGER ID SEMI\n             | DOUBLE ID SEMIassign : ID ASSIGN ICONSTANT SEMI\n            | ID ASSIGN DCONSTANT SEMIprint : PRINT_INTEGER LPAREN ID RPAREN SEMI\n             | PRINT_STRING LPAREN SCONSTANT RPAREN SEMI\n             | PRINT_DOUBLE LPAREN ID RPAREN SEMIepsilon :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,],[0,-1,]),'ID':([2,8,12,13,15,16,17,18,19,20,26,29,31,32,35,39,40,44,45,46,],[3,9,14,24,14,-4,-5,-6,-7,28,14,36,38,-8,-9,-10,-11,-12,-13,-14,]),'LCURLY':([3,11,],[4,12,]),'FUNCTION':([4,],[6,]),'RCURLY':([5,12,15,16,17,18,19,26,27,32,35,39,40,44,45,46,],[7,-15,27,-4,-5,-6,-7,-3,-2,-8,-9,-10,-11,-12,-13,-14,]),'INTEGER':([6,12,15,16,17,18,19,26,32,35,39,40,44,45,46,],[8,13,13,-4,-5,-6,-7,13,-8,-9,-10,-11,-12,-13,-14,]),'LPAREN':([9,21,22,23,],[10,29,30,31,]),'RPAREN':([10,36,37,38,],[11,41,42,43,]),'DOUBLE':([12,15,16,17,18,19,26,32,35,39,40,44,45,46,],[20,20,-4,-5,-6,-7,20,-8,-9,-10,-11,-12,-13,-14,]),'PRINT_INTEGER':([12,15,16,17,18,19,26,32,35,39,40,44,45,46,],[21,21,-4,-5,-6,-7,21,-8,-9,-10,-11,-12,-13,-14,]),'PRINT_STRING':([12,15,16,17,18,19,26,32,35,39,40,44,45,46,],[22,22,-4,-5,-6,-7,22,-8,-9,-10,-11,-12,-13,-14,]),'PRINT_DOUBLE':([12,15,16,17,18,19,26,32,35,39,40,44,45,46,],[23,23,-4,-5,-6,-7,23,-8,-9,-10,-11,-12,-13,-14,]),'ASSIGN':([14,],[25,]),'SEMI':([24,28,33,34,41,42,43,],[32,35,39,40,44,45,46,]),'ICONSTANT':([25,],[33,]),'DCONSTANT':([25,],[34,]),'SCONSTANT':([30,],[37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function':([4,],[5,]),'statements':([12,15,26,],[15,26,26,]),'epsilon':([12,15,26,],[16,16,16,]),'declare':([12,15,26,],[17,17,17,]),'assign':([12,15,26,],[18,18,18,]),'print':([12,15,26,],[19,19,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID LCURLY function RCURLY','program',5,'p_program','f23yacc.py',13),
  ('function -> FUNCTION INTEGER ID LPAREN RPAREN LCURLY statements RCURLY','function',8,'p_function','f23yacc.py',20),
  ('statements -> statements statements','statements',2,'p_statements','f23yacc.py',25),
  ('statements -> epsilon','statements',1,'p_statements_empty','f23yacc.py',31),
  ('statements -> declare','statements',1,'p_statements_dap','f23yacc.py',34),
  ('statements -> assign','statements',1,'p_statements_dap','f23yacc.py',35),
  ('statements -> print','statements',1,'p_statements_dap','f23yacc.py',36),
  ('declare -> INTEGER ID SEMI','declare',3,'p_declare','f23yacc.py',41),
  ('declare -> DOUBLE ID SEMI','declare',3,'p_declare','f23yacc.py',42),
  ('assign -> ID ASSIGN ICONSTANT SEMI','assign',4,'p_assign','f23yacc.py',51),
  ('assign -> ID ASSIGN DCONSTANT SEMI','assign',4,'p_assign','f23yacc.py',52),
  ('print -> PRINT_INTEGER LPAREN ID RPAREN SEMI','print',5,'p_print','f23yacc.py',58),
  ('print -> PRINT_STRING LPAREN SCONSTANT RPAREN SEMI','print',5,'p_print','f23yacc.py',59),
  ('print -> PRINT_DOUBLE LPAREN ID RPAREN SEMI','print',5,'p_print','f23yacc.py',60),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','f23yacc.py',64),
]
